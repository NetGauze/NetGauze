[package]
name = "netgauze-flow-pkt"
version = "0.6.0"
edition = "2021"
authors = ["Ahmed Elhassany <a.hassany@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/NetGauze/NetGauze"
homepage = "https://github.com/NetGauze/NetGauze"
description = """
Netflow(v9)/IPFIX(v10) Protocol representation and serde
"""
keywords = ["ipfix", "netflow", "parser", "protocol"]
categories = ["network-programming", "parsing"]
# Specify the files to include in the crate
include = [
    "**/*.rs",
    "README.md",
    "LICENSE",
    "build.rs",
    "benches/*.rs",
    "examples/*.rs",
    "registry/**",
]

[dependencies]
netgauze-locate = { workspace = true, optional = true }
netgauze-parse-utils = { workspace = true, optional = true }
netgauze-serde-macros = { workspace = true, optional = true }
netgauze-iana = { workspace = true }
netgauze-analytics = { workspace = true }
serde = { workspace = true, features = ["derive"] }
strum = { workspace = true }
strum_macros = { workspace = true }
chrono = { workspace = true, default-features = false, features = [
    "std",
    "serde",
] }
nom = { workspace = true, optional = true }
byteorder = { workspace = true, optional = true }
criterion = { workspace = true, optional = true } # Dev dep for bench
tracing = { workspace = true, optional = true }
tokio-util = { workspace = true, features = ["codec"], optional = true }
bytes = { workspace = true, optional = true }
arbitrary = { workspace = true, optional = true }
arbitrary_ext = { workspace = true, optional = true }
indexmap = { workspace = true }
datafusion = { version = "46", features = ["default", "serde", "avro"], optional = true }
arrow_convert = { path ="/Users/taaahel1/repos/arrow-convert/arrow_convert", features = ["derive", "rust_decimal"], optional = true }
arrow = {version = "54", features = ["default", "canonical_extension_types"], optional = true}

[features]
default = ["serde", "arrow-serde"]
serde = [
    "nom",
    "byteorder",
    "netgauze-locate",
    "netgauze-parse-utils",
    "netgauze-serde-macros",
]
codec = ["tracing", "tokio-util", "bytes"]
bench = ["criterion"]
fuzz = ["arbitrary", "arbitrary_ext"]
iana-upstream-build = ["serde"]
arrow-serde = ["datafusion", "arrow_convert", "arrow"]

[dev-dependencies]
netgauze-pcap-reader = { workspace = true }
netgauze-parse-utils = { workspace = true, features = ["test-helpers"] }
serde_json = { workspace = true }
rstest = { workspace = true }
pcap-parser = { workspace = true, features = ["data"] }

[build-dependencies]
netgauze-ipfix-code-generator = { workspace = true }

[[bench]]
name = "serde_benchmark"
harness = false
required-features = ["bench"]
