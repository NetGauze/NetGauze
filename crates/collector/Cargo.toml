[package]
name = "netgauze-collector"
version = "0.7.0"
edition = "2021"
authors = ["Ahmed Elhassany <a.hassany@gmail.com>"]
license = "Apache-2.0"
readme = "README.md"
repository = "https://github.com/NetGauze/NetGauze"
homepage = "https://github.com/NetGauze/NetGauze"
description = """
Network metrics collector
"""
keywords = ["ipfix", "netflow", "parser", "protocol"]
categories = ["network-programming", "parsing"]
build = "build.rs"

[package.metadata.generate-rpm]
assets = [
  { source = "crates/collector/LICENSE", dest = "/usr/share/doc/netgauze-collector/LICENSE", doc = true },
  { source = "crates/collector/README.md", dest = "/usr/share/doc/netgauze-collector/README.md", doc = true },
  { source = "target/release/netgauze-collector", dest = "/usr/bin/netgauze-collector", caps = "cap_net_raw+ep" },
]

[dependencies]
netgauze-analytics = { workspace = true }
netgauze-flow-service = { workspace = true }
netgauze-flow-pkt = { workspace = true, features = ["codec"] }
netgauze-udp-notif-service = { workspace = true }
netgauze-udp-notif-pkt = { workspace = true }
netgauze-yang-push = { workspace = true }
netgauze-iana = { workspace = true }
tokio = { workspace = true, features = ["full", "tracing", "rt-multi-thread"] }
serde = { workspace = true, features = ["derive"] }
tracing = { workspace = true }
futures = { workspace = true }
futures-util = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
async-channel = { workspace = true }
serde_with = { workspace = true, features = ["default"] }
reqwest = { workspace = true, default-features = false, features = [
    "http2",
    "json",
    "stream",
    "rustls-tls-native-roots",
] }
chrono = { workspace = true, default-features = true }
tracing-subscriber = { workspace = true }
anyhow = { workspace = true }
opentelemetry = { workspace = true, features = ["metrics", "trace", "logs"] }
opentelemetry_sdk = { workspace = true, features = [
    "metrics",
    "trace",
    "logs",
    "rt-tokio",
] }
opentelemetry-otlp = { workspace = true, features = [
    "metrics",
    "trace",
    "logs",
    "grpc-tonic",
] }
apache-avro = { workspace = true }
indexmap = { workspace = true, features = ["serde"] }
serde_json = { workspace = true }
schema_registry_converter = { workspace = true, default-features = false, features = [
    "avro",
    "futures",
    "rustls_tls",
] }
rdkafka = { workspace = true, features = [
    "tokio",
    "cmake-build",
    "ssl-vendored",
] }
either = { workspace = true }
pin-utils = { workspace = true }
serde_yaml = { workspace = true }
ordered-float = { workspace = true }
ciborium = { workspace = true }
bytes = { workspace = true }
shadow-rs = { workspace = true, features = ["default", "metadata", "build"] }
smallvec = { workspace = true }
rustc-hash = { workspace = true }
notify = { workspace = true }

[target.'cfg(not(target_env = "msvc"))'.dependencies]
tikv-jemallocator = { version = "0.6", features = [
    "unprefixed_malloc_on_supported_platforms",
] }

[build-dependencies]
shadow-rs = { workspace = true, default-features = true }

[dev-dependencies]
chrono = { workspace = true, default-features = false, features = [
    "std",
    "clock",
] }
tracing-subscriber = { workspace = true }
bytes = { workspace = true }
tempfile = { workspace = true }
